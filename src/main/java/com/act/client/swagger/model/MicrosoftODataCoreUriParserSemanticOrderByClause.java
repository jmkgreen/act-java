/*
 * act.web.api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.act.client.swagger.model;

import java.util.Objects;
import com.act.client.swagger.model.MicrosoftODataCoreUriParserSemanticOrderByClause;
import com.act.client.swagger.model.MicrosoftODataCoreUriParserSemanticRangeVariable;
import com.act.client.swagger.model.MicrosoftODataCoreUriParserSemanticSingleValueNode;
import com.act.client.swagger.model.MicrosoftODataEdmIEdmTypeReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * MicrosoftODataCoreUriParserSemanticOrderByClause
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T12:00:13.972Z")
public class MicrosoftODataCoreUriParserSemanticOrderByClause {
  @JsonProperty("thenBy")
  private MicrosoftODataCoreUriParserSemanticOrderByClause thenBy = null;

  @JsonProperty("expression")
  private MicrosoftODataCoreUriParserSemanticSingleValueNode expression = null;

  /**
   * Gets or Sets direction
   */
  public enum DirectionEnum {
    ASCENDING("Ascending"),
    
    DESCENDING("Descending");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String text) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("direction")
  private DirectionEnum direction = null;

  @JsonProperty("rangeVariable")
  private MicrosoftODataCoreUriParserSemanticRangeVariable rangeVariable = null;

  @JsonProperty("itemType")
  private MicrosoftODataEdmIEdmTypeReference itemType = null;

  public MicrosoftODataCoreUriParserSemanticOrderByClause thenBy(MicrosoftODataCoreUriParserSemanticOrderByClause thenBy) {
    this.thenBy = thenBy;
    return this;
  }

   /**
   * Get thenBy
   * @return thenBy
  **/
  @ApiModelProperty(value = "")
  public MicrosoftODataCoreUriParserSemanticOrderByClause getThenBy() {
    return thenBy;
  }

  public void setThenBy(MicrosoftODataCoreUriParserSemanticOrderByClause thenBy) {
    this.thenBy = thenBy;
  }

  public MicrosoftODataCoreUriParserSemanticOrderByClause expression(MicrosoftODataCoreUriParserSemanticSingleValueNode expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @ApiModelProperty(value = "")
  public MicrosoftODataCoreUriParserSemanticSingleValueNode getExpression() {
    return expression;
  }

  public void setExpression(MicrosoftODataCoreUriParserSemanticSingleValueNode expression) {
    this.expression = expression;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(value = "")
  public DirectionEnum getDirection() {
    return direction;
  }

  public MicrosoftODataCoreUriParserSemanticOrderByClause rangeVariable(MicrosoftODataCoreUriParserSemanticRangeVariable rangeVariable) {
    this.rangeVariable = rangeVariable;
    return this;
  }

   /**
   * Get rangeVariable
   * @return rangeVariable
  **/
  @ApiModelProperty(value = "")
  public MicrosoftODataCoreUriParserSemanticRangeVariable getRangeVariable() {
    return rangeVariable;
  }

  public void setRangeVariable(MicrosoftODataCoreUriParserSemanticRangeVariable rangeVariable) {
    this.rangeVariable = rangeVariable;
  }

  public MicrosoftODataCoreUriParserSemanticOrderByClause itemType(MicrosoftODataEdmIEdmTypeReference itemType) {
    this.itemType = itemType;
    return this;
  }

   /**
   * Get itemType
   * @return itemType
  **/
  @ApiModelProperty(value = "")
  public MicrosoftODataEdmIEdmTypeReference getItemType() {
    return itemType;
  }

  public void setItemType(MicrosoftODataEdmIEdmTypeReference itemType) {
    this.itemType = itemType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MicrosoftODataCoreUriParserSemanticOrderByClause microsoftODataCoreUriParserSemanticOrderByClause = (MicrosoftODataCoreUriParserSemanticOrderByClause) o;
    return Objects.equals(this.thenBy, microsoftODataCoreUriParserSemanticOrderByClause.thenBy) &&
        Objects.equals(this.expression, microsoftODataCoreUriParserSemanticOrderByClause.expression) &&
        Objects.equals(this.direction, microsoftODataCoreUriParserSemanticOrderByClause.direction) &&
        Objects.equals(this.rangeVariable, microsoftODataCoreUriParserSemanticOrderByClause.rangeVariable) &&
        Objects.equals(this.itemType, microsoftODataCoreUriParserSemanticOrderByClause.itemType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(thenBy, expression, direction, rangeVariable, itemType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MicrosoftODataCoreUriParserSemanticOrderByClause {\n");
    
    sb.append("    thenBy: ").append(toIndentedString(thenBy)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    rangeVariable: ").append(toIndentedString(rangeVariable)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

