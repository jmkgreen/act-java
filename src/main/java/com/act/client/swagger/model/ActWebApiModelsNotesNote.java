/*
 * act.web.api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.act.client.swagger.model;

import java.util.Objects;
import com.act.client.swagger.model.ActWebApiModelsAttachmentsAttachment;
import com.act.client.swagger.model.ActWebApiModelsCompaniesEmbeddedCompany;
import com.act.client.swagger.model.ActWebApiModelsContactsEmbeddedContact;
import com.act.client.swagger.model.ActWebApiModelsGroupsEmbeddedGroup;
import com.act.client.swagger.model.ActWebApiModelsOpportunitiesEmbeddedOpportunity;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T12:00:13.972Z")
public class ActWebApiModelsNotesNote {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("manageUserID")
  private String manageUserID = null;

  @JsonProperty("createUserID")
  private String createUserID = null;

  @JsonProperty("isPrivate")
  private Boolean isPrivate = null;

  @JsonProperty("noteText")
  private String noteText = null;

  @JsonProperty("noteTypeID")
  private Integer noteTypeID = null;

  @JsonProperty("displayDate")
  private OffsetDateTime displayDate = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("edited")
  private OffsetDateTime edited = null;

  @JsonProperty("companies")
  private List<ActWebApiModelsCompaniesEmbeddedCompany> companies = null;

  @JsonProperty("contacts")
  private List<ActWebApiModelsContactsEmbeddedContact> contacts = null;

  @JsonProperty("groups")
  private List<ActWebApiModelsGroupsEmbeddedGroup> groups = null;

  @JsonProperty("opportunities")
  private List<ActWebApiModelsOpportunitiesEmbeddedOpportunity> opportunities = null;

  @JsonProperty("attachment")
  private ActWebApiModelsAttachmentsAttachment attachment = null;

  public ActWebApiModelsNotesNote id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ActWebApiModelsNotesNote manageUserID(String manageUserID) {
    this.manageUserID = manageUserID;
    return this;
  }

   /**
   * 
   * @return manageUserID
  **/
  @ApiModelProperty(value = "")
  public String getManageUserID() {
    return manageUserID;
  }

  public void setManageUserID(String manageUserID) {
    this.manageUserID = manageUserID;
  }

  public ActWebApiModelsNotesNote createUserID(String createUserID) {
    this.createUserID = createUserID;
    return this;
  }

   /**
   * 
   * @return createUserID
  **/
  @ApiModelProperty(value = "")
  public String getCreateUserID() {
    return createUserID;
  }

  public void setCreateUserID(String createUserID) {
    this.createUserID = createUserID;
  }

  public ActWebApiModelsNotesNote isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * 
   * @return isPrivate
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  public ActWebApiModelsNotesNote noteText(String noteText) {
    this.noteText = noteText;
    return this;
  }

   /**
   * 
   * @return noteText
  **/
  @ApiModelProperty(value = "")
  public String getNoteText() {
    return noteText;
  }

  public void setNoteText(String noteText) {
    this.noteText = noteText;
  }

  public ActWebApiModelsNotesNote noteTypeID(Integer noteTypeID) {
    this.noteTypeID = noteTypeID;
    return this;
  }

   /**
   * 
   * @return noteTypeID
  **/
  @ApiModelProperty(value = "")
  public Integer getNoteTypeID() {
    return noteTypeID;
  }

  public void setNoteTypeID(Integer noteTypeID) {
    this.noteTypeID = noteTypeID;
  }

  public ActWebApiModelsNotesNote displayDate(OffsetDateTime displayDate) {
    this.displayDate = displayDate;
    return this;
  }

   /**
   * 
   * @return displayDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDisplayDate() {
    return displayDate;
  }

  public void setDisplayDate(OffsetDateTime displayDate) {
    this.displayDate = displayDate;
  }

  public ActWebApiModelsNotesNote created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * 
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public ActWebApiModelsNotesNote edited(OffsetDateTime edited) {
    this.edited = edited;
    return this;
  }

   /**
   * 
   * @return edited
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEdited() {
    return edited;
  }

  public void setEdited(OffsetDateTime edited) {
    this.edited = edited;
  }

  public ActWebApiModelsNotesNote companies(List<ActWebApiModelsCompaniesEmbeddedCompany> companies) {
    this.companies = companies;
    return this;
  }

  public ActWebApiModelsNotesNote addCompaniesItem(ActWebApiModelsCompaniesEmbeddedCompany companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<ActWebApiModelsCompaniesEmbeddedCompany>();
    }
    this.companies.add(companiesItem);
    return this;
  }

   /**
   * List of companies that are associated to this note entity.
   * @return companies
  **/
  @ApiModelProperty(value = "List of companies that are associated to this note entity.")
  public List<ActWebApiModelsCompaniesEmbeddedCompany> getCompanies() {
    return companies;
  }

  public void setCompanies(List<ActWebApiModelsCompaniesEmbeddedCompany> companies) {
    this.companies = companies;
  }

  public ActWebApiModelsNotesNote contacts(List<ActWebApiModelsContactsEmbeddedContact> contacts) {
    this.contacts = contacts;
    return this;
  }

  public ActWebApiModelsNotesNote addContactsItem(ActWebApiModelsContactsEmbeddedContact contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<ActWebApiModelsContactsEmbeddedContact>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * List of companies that are associated to this note entity.
   * @return contacts
  **/
  @ApiModelProperty(value = "List of companies that are associated to this note entity.")
  public List<ActWebApiModelsContactsEmbeddedContact> getContacts() {
    return contacts;
  }

  public void setContacts(List<ActWebApiModelsContactsEmbeddedContact> contacts) {
    this.contacts = contacts;
  }

  public ActWebApiModelsNotesNote groups(List<ActWebApiModelsGroupsEmbeddedGroup> groups) {
    this.groups = groups;
    return this;
  }

  public ActWebApiModelsNotesNote addGroupsItem(ActWebApiModelsGroupsEmbeddedGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<ActWebApiModelsGroupsEmbeddedGroup>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * List a groups that are associated to this note entity.
   * @return groups
  **/
  @ApiModelProperty(value = "List a groups that are associated to this note entity.")
  public List<ActWebApiModelsGroupsEmbeddedGroup> getGroups() {
    return groups;
  }

  public void setGroups(List<ActWebApiModelsGroupsEmbeddedGroup> groups) {
    this.groups = groups;
  }

  public ActWebApiModelsNotesNote opportunities(List<ActWebApiModelsOpportunitiesEmbeddedOpportunity> opportunities) {
    this.opportunities = opportunities;
    return this;
  }

  public ActWebApiModelsNotesNote addOpportunitiesItem(ActWebApiModelsOpportunitiesEmbeddedOpportunity opportunitiesItem) {
    if (this.opportunities == null) {
      this.opportunities = new ArrayList<ActWebApiModelsOpportunitiesEmbeddedOpportunity>();
    }
    this.opportunities.add(opportunitiesItem);
    return this;
  }

   /**
   * List a opportunities that are associated to this note entity.
   * @return opportunities
  **/
  @ApiModelProperty(value = "List a opportunities that are associated to this note entity.")
  public List<ActWebApiModelsOpportunitiesEmbeddedOpportunity> getOpportunities() {
    return opportunities;
  }

  public void setOpportunities(List<ActWebApiModelsOpportunitiesEmbeddedOpportunity> opportunities) {
    this.opportunities = opportunities;
  }

  public ActWebApiModelsNotesNote attachment(ActWebApiModelsAttachmentsAttachment attachment) {
    this.attachment = attachment;
    return this;
  }

   /**
   * Gets the attachment referenced by this note.
   * @return attachment
  **/
  @ApiModelProperty(value = "Gets the attachment referenced by this note.")
  public ActWebApiModelsAttachmentsAttachment getAttachment() {
    return attachment;
  }

  public void setAttachment(ActWebApiModelsAttachmentsAttachment attachment) {
    this.attachment = attachment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActWebApiModelsNotesNote actWebApiModelsNotesNote = (ActWebApiModelsNotesNote) o;
    return Objects.equals(this.id, actWebApiModelsNotesNote.id) &&
        Objects.equals(this.manageUserID, actWebApiModelsNotesNote.manageUserID) &&
        Objects.equals(this.createUserID, actWebApiModelsNotesNote.createUserID) &&
        Objects.equals(this.isPrivate, actWebApiModelsNotesNote.isPrivate) &&
        Objects.equals(this.noteText, actWebApiModelsNotesNote.noteText) &&
        Objects.equals(this.noteTypeID, actWebApiModelsNotesNote.noteTypeID) &&
        Objects.equals(this.displayDate, actWebApiModelsNotesNote.displayDate) &&
        Objects.equals(this.created, actWebApiModelsNotesNote.created) &&
        Objects.equals(this.edited, actWebApiModelsNotesNote.edited) &&
        Objects.equals(this.companies, actWebApiModelsNotesNote.companies) &&
        Objects.equals(this.contacts, actWebApiModelsNotesNote.contacts) &&
        Objects.equals(this.groups, actWebApiModelsNotesNote.groups) &&
        Objects.equals(this.opportunities, actWebApiModelsNotesNote.opportunities) &&
        Objects.equals(this.attachment, actWebApiModelsNotesNote.attachment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, manageUserID, createUserID, isPrivate, noteText, noteTypeID, displayDate, created, edited, companies, contacts, groups, opportunities, attachment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActWebApiModelsNotesNote {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    manageUserID: ").append(toIndentedString(manageUserID)).append("\n");
    sb.append("    createUserID: ").append(toIndentedString(createUserID)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    noteText: ").append(toIndentedString(noteText)).append("\n");
    sb.append("    noteTypeID: ").append(toIndentedString(noteTypeID)).append("\n");
    sb.append("    displayDate: ").append(toIndentedString(displayDate)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    edited: ").append(toIndentedString(edited)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    opportunities: ").append(toIndentedString(opportunities)).append("\n");
    sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

