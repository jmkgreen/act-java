/*
 * act.web.api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.act.client.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * SystemWebODataRoutingODataPathSegment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T12:00:13.972Z")
public class SystemWebODataRoutingODataPathSegment {
  @JsonProperty("segmentKind")
  private String segmentKind = null;

   /**
   * Get segmentKind
   * @return segmentKind
  **/
  @ApiModelProperty(value = "")
  public String getSegmentKind() {
    return segmentKind;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemWebODataRoutingODataPathSegment systemWebODataRoutingODataPathSegment = (SystemWebODataRoutingODataPathSegment) o;
    return Objects.equals(this.segmentKind, systemWebODataRoutingODataPathSegment.segmentKind);
  }

  @Override
  public int hashCode() {
    return Objects.hash(segmentKind);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemWebODataRoutingODataPathSegment {\n");
    
    sb.append("    segmentKind: ").append(toIndentedString(segmentKind)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

