/*
 * act.web.api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.act.client.swagger.model;

import java.util.Objects;
import com.act.client.swagger.model.ActWebApiModelsCompaniesEmbeddedCompany;
import com.act.client.swagger.model.ActWebApiModelsContactsEmbeddedContact;
import com.act.client.swagger.model.ActWebApiModelsGroupsEmbeddedGroup;
import com.act.client.swagger.model.ActWebApiModelsOpportunitiesStage;
import com.act.client.swagger.model.SystemObject;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * A contact or company which has been qualified.
 */
@ApiModel(description = "A contact or company which has been qualified.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T12:00:13.972Z")
public class ActWebApiModelsOpportunitiesOpportunity {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("actualCloseDate")
  private OffsetDateTime actualCloseDate = null;

  @JsonProperty("companies")
  private List<ActWebApiModelsCompaniesEmbeddedCompany> companies = null;

  @JsonProperty("competitor")
  private String competitor = null;

  @JsonProperty("contactNames")
  private String contactNames = null;

  @JsonProperty("contacts")
  private List<ActWebApiModelsContactsEmbeddedContact> contacts = null;

  @JsonProperty("creator")
  private String creator = null;

  @JsonProperty("daysOpen")
  private Integer daysOpen = null;

  @JsonProperty("estimatedCloseDate")
  private OffsetDateTime estimatedCloseDate = null;

  @JsonProperty("grossMargin")
  private Double grossMargin = null;

  @JsonProperty("groups")
  private List<ActWebApiModelsGroupsEmbeddedGroup> groups = null;

  @JsonProperty("isPrivate")
  private Boolean isPrivate = null;

  @JsonProperty("manager")
  private String manager = null;

  @JsonProperty("openDate")
  private OffsetDateTime openDate = null;

  @JsonProperty("probability")
  private Integer probability = null;

  @JsonProperty("productTotal")
  private Double productTotal = null;

  @JsonProperty("reason")
  private String reason = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("stage")
  private ActWebApiModelsOpportunitiesStage stage = null;

  /**
   * This displays the status of the opportunity (Open, Won, Lost, or inactive).
   */
  public enum StatusEnum {
    OPEN("Open"),
    
    WON("Won"),
    
    LOST("Lost"),
    
    INACTIVE("Inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("totalPerCompany")
  private Double totalPerCompany = null;

  @JsonProperty("totalPerContact")
  private Double totalPerContact = null;

  @JsonProperty("totalPerGroup")
  private Double totalPerGroup = null;

  @JsonProperty("weightedTotal")
  private Double weightedTotal = null;

  @JsonProperty("relatedEntitiesResolver")
  private Boolean relatedEntitiesResolver = null;

  @JsonProperty("customFields")
  private Map<String, SystemObject> customFields = null;

  @JsonProperty("created")
  private OffsetDateTime created = null;

  @JsonProperty("edited")
  private OffsetDateTime edited = null;

  @JsonProperty("editedBy")
  private String editedBy = null;

  @JsonProperty("recordOwner")
  private String recordOwner = null;

  public ActWebApiModelsOpportunitiesOpportunity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier that represents a potential piece of business.
   * @return id
  **/
  @ApiModelProperty(value = "A unique identifier that represents a potential piece of business.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ActWebApiModelsOpportunitiesOpportunity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of an opportunity.
   * @return name
  **/
  @ApiModelProperty(value = "The name of an opportunity.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ActWebApiModelsOpportunitiesOpportunity actualCloseDate(OffsetDateTime actualCloseDate) {
    this.actualCloseDate = actualCloseDate;
    return this;
  }

   /**
   * The date that the opportunity as closed.
   * @return actualCloseDate
  **/
  @ApiModelProperty(value = "The date that the opportunity as closed.")
  public OffsetDateTime getActualCloseDate() {
    return actualCloseDate;
  }

  public void setActualCloseDate(OffsetDateTime actualCloseDate) {
    this.actualCloseDate = actualCloseDate;
  }

  public ActWebApiModelsOpportunitiesOpportunity companies(List<ActWebApiModelsCompaniesEmbeddedCompany> companies) {
    this.companies = companies;
    return this;
  }

  public ActWebApiModelsOpportunitiesOpportunity addCompaniesItem(ActWebApiModelsCompaniesEmbeddedCompany companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<ActWebApiModelsCompaniesEmbeddedCompany>();
    }
    this.companies.add(companiesItem);
    return this;
  }

   /**
   * List of companies that are associated to this opportunity entity.
   * @return companies
  **/
  @ApiModelProperty(value = "List of companies that are associated to this opportunity entity.")
  public List<ActWebApiModelsCompaniesEmbeddedCompany> getCompanies() {
    return companies;
  }

  public void setCompanies(List<ActWebApiModelsCompaniesEmbeddedCompany> companies) {
    this.companies = companies;
  }

  public ActWebApiModelsOpportunitiesOpportunity competitor(String competitor) {
    this.competitor = competitor;
    return this;
  }

   /**
   * Gets the name of the competitor for this opportunity.
   * @return competitor
  **/
  @ApiModelProperty(value = "Gets the name of the competitor for this opportunity.")
  public String getCompetitor() {
    return competitor;
  }

  public void setCompetitor(String competitor) {
    this.competitor = competitor;
  }

  public ActWebApiModelsOpportunitiesOpportunity contactNames(String contactNames) {
    this.contactNames = contactNames;
    return this;
  }

   /**
   * The names of the contacts associated with this opportunity.
   * @return contactNames
  **/
  @ApiModelProperty(value = "The names of the contacts associated with this opportunity.")
  public String getContactNames() {
    return contactNames;
  }

  public void setContactNames(String contactNames) {
    this.contactNames = contactNames;
  }

  public ActWebApiModelsOpportunitiesOpportunity contacts(List<ActWebApiModelsContactsEmbeddedContact> contacts) {
    this.contacts = contacts;
    return this;
  }

  public ActWebApiModelsOpportunitiesOpportunity addContactsItem(ActWebApiModelsContactsEmbeddedContact contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<ActWebApiModelsContactsEmbeddedContact>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * List of contacts that are associated to this opportunity entity.
   * @return contacts
  **/
  @ApiModelProperty(value = "List of contacts that are associated to this opportunity entity.")
  public List<ActWebApiModelsContactsEmbeddedContact> getContacts() {
    return contacts;
  }

  public void setContacts(List<ActWebApiModelsContactsEmbeddedContact> contacts) {
    this.contacts = contacts;
  }

  public ActWebApiModelsOpportunitiesOpportunity creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * The name of the creator of this opportunity.
   * @return creator
  **/
  @ApiModelProperty(value = "The name of the creator of this opportunity.")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public ActWebApiModelsOpportunitiesOpportunity daysOpen(Integer daysOpen) {
    this.daysOpen = daysOpen;
    return this;
  }

   /**
   * The number of days this opportunity has been opened.
   * @return daysOpen
  **/
  @ApiModelProperty(value = "The number of days this opportunity has been opened.")
  public Integer getDaysOpen() {
    return daysOpen;
  }

  public void setDaysOpen(Integer daysOpen) {
    this.daysOpen = daysOpen;
  }

  public ActWebApiModelsOpportunitiesOpportunity estimatedCloseDate(OffsetDateTime estimatedCloseDate) {
    this.estimatedCloseDate = estimatedCloseDate;
    return this;
  }

   /**
   * The date the opportunity is expected to be closed.
   * @return estimatedCloseDate
  **/
  @ApiModelProperty(value = "The date the opportunity is expected to be closed.")
  public OffsetDateTime getEstimatedCloseDate() {
    return estimatedCloseDate;
  }

  public void setEstimatedCloseDate(OffsetDateTime estimatedCloseDate) {
    this.estimatedCloseDate = estimatedCloseDate;
  }

  public ActWebApiModelsOpportunitiesOpportunity grossMargin(Double grossMargin) {
    this.grossMargin = grossMargin;
    return this;
  }

   /**
   * Represents the net sales less the cost of goods and services sold.
   * @return grossMargin
  **/
  @ApiModelProperty(value = "Represents the net sales less the cost of goods and services sold.")
  public Double getGrossMargin() {
    return grossMargin;
  }

  public void setGrossMargin(Double grossMargin) {
    this.grossMargin = grossMargin;
  }

  public ActWebApiModelsOpportunitiesOpportunity groups(List<ActWebApiModelsGroupsEmbeddedGroup> groups) {
    this.groups = groups;
    return this;
  }

  public ActWebApiModelsOpportunitiesOpportunity addGroupsItem(ActWebApiModelsGroupsEmbeddedGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<ActWebApiModelsGroupsEmbeddedGroup>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * List of groups that are associated to this opportunity entity.
   * @return groups
  **/
  @ApiModelProperty(value = "List of groups that are associated to this opportunity entity.")
  public List<ActWebApiModelsGroupsEmbeddedGroup> getGroups() {
    return groups;
  }

  public void setGroups(List<ActWebApiModelsGroupsEmbeddedGroup> groups) {
    this.groups = groups;
  }

  public ActWebApiModelsOpportunitiesOpportunity isPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * Indicates whether this opportunity is private
   * @return isPrivate
  **/
  @ApiModelProperty(value = "Indicates whether this opportunity is private")
  public Boolean isIsPrivate() {
    return isPrivate;
  }

  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }

  public ActWebApiModelsOpportunitiesOpportunity manager(String manager) {
    this.manager = manager;
    return this;
  }

   /**
   * The name of the record manager of this opportunity.
   * @return manager
  **/
  @ApiModelProperty(value = "The name of the record manager of this opportunity.")
  public String getManager() {
    return manager;
  }

  public void setManager(String manager) {
    this.manager = manager;
  }

  public ActWebApiModelsOpportunitiesOpportunity openDate(OffsetDateTime openDate) {
    this.openDate = openDate;
    return this;
  }

   /**
   * The date the opportunity was opened.
   * @return openDate
  **/
  @ApiModelProperty(value = "The date the opportunity was opened.")
  public OffsetDateTime getOpenDate() {
    return openDate;
  }

  public void setOpenDate(OffsetDateTime openDate) {
    this.openDate = openDate;
  }

  public ActWebApiModelsOpportunitiesOpportunity probability(Integer probability) {
    this.probability = probability;
    return this;
  }

   /**
   * The likelihood this opportunity will will be won by the close date.
   * @return probability
  **/
  @ApiModelProperty(value = "The likelihood this opportunity will will be won by the close date.")
  public Integer getProbability() {
    return probability;
  }

  public void setProbability(Integer probability) {
    this.probability = probability;
  }

  public ActWebApiModelsOpportunitiesOpportunity productTotal(Double productTotal) {
    this.productTotal = productTotal;
    return this;
  }

   /**
   * The total cost of the product or services.
   * @return productTotal
  **/
  @ApiModelProperty(value = "The total cost of the product or services.")
  public Double getProductTotal() {
    return productTotal;
  }

  public void setProductTotal(Double productTotal) {
    this.productTotal = productTotal;
  }

  public ActWebApiModelsOpportunitiesOpportunity reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Describs why the opportunity status changed.
   * @return reason
  **/
  @ApiModelProperty(value = "Describs why the opportunity status changed.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public ActWebApiModelsOpportunitiesOpportunity source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Describs the source of the opportunity.
   * @return source
  **/
  @ApiModelProperty(value = "Describs the source of the opportunity.")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public ActWebApiModelsOpportunitiesOpportunity stage(ActWebApiModelsOpportunitiesStage stage) {
    this.stage = stage;
    return this;
  }

   /**
   * The stage of the opportunity.
   * @return stage
  **/
  @ApiModelProperty(value = "The stage of the opportunity.")
  public ActWebApiModelsOpportunitiesStage getStage() {
    return stage;
  }

  public void setStage(ActWebApiModelsOpportunitiesStage stage) {
    this.stage = stage;
  }

  public ActWebApiModelsOpportunitiesOpportunity status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * This displays the status of the opportunity (Open, Won, Lost, or inactive).
   * @return status
  **/
  @ApiModelProperty(value = "This displays the status of the opportunity (Open, Won, Lost, or inactive).")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ActWebApiModelsOpportunitiesOpportunity totalPerCompany(Double totalPerCompany) {
    this.totalPerCompany = totalPerCompany;
    return this;
  }

   /**
   * The average total per associated company.
   * @return totalPerCompany
  **/
  @ApiModelProperty(value = "The average total per associated company.")
  public Double getTotalPerCompany() {
    return totalPerCompany;
  }

  public void setTotalPerCompany(Double totalPerCompany) {
    this.totalPerCompany = totalPerCompany;
  }

  public ActWebApiModelsOpportunitiesOpportunity totalPerContact(Double totalPerContact) {
    this.totalPerContact = totalPerContact;
    return this;
  }

   /**
   * The average total per associated contact.
   * @return totalPerContact
  **/
  @ApiModelProperty(value = "The average total per associated contact.")
  public Double getTotalPerContact() {
    return totalPerContact;
  }

  public void setTotalPerContact(Double totalPerContact) {
    this.totalPerContact = totalPerContact;
  }

  public ActWebApiModelsOpportunitiesOpportunity totalPerGroup(Double totalPerGroup) {
    this.totalPerGroup = totalPerGroup;
    return this;
  }

   /**
   * The average total per associated group.
   * @return totalPerGroup
  **/
  @ApiModelProperty(value = "The average total per associated group.")
  public Double getTotalPerGroup() {
    return totalPerGroup;
  }

  public void setTotalPerGroup(Double totalPerGroup) {
    this.totalPerGroup = totalPerGroup;
  }

  public ActWebApiModelsOpportunitiesOpportunity weightedTotal(Double weightedTotal) {
    this.weightedTotal = weightedTotal;
    return this;
  }

   /**
   * The weight of the product.
   * @return weightedTotal
  **/
  @ApiModelProperty(value = "The weight of the product.")
  public Double getWeightedTotal() {
    return weightedTotal;
  }

  public void setWeightedTotal(Double weightedTotal) {
    this.weightedTotal = weightedTotal;
  }

  public ActWebApiModelsOpportunitiesOpportunity relatedEntitiesResolver(Boolean relatedEntitiesResolver) {
    this.relatedEntitiesResolver = relatedEntitiesResolver;
    return this;
  }

   /**
   * If true: prevents related entities from serializing.
   * @return relatedEntitiesResolver
  **/
  @ApiModelProperty(value = "If true: prevents related entities from serializing.")
  public Boolean isRelatedEntitiesResolver() {
    return relatedEntitiesResolver;
  }

  public void setRelatedEntitiesResolver(Boolean relatedEntitiesResolver) {
    this.relatedEntitiesResolver = relatedEntitiesResolver;
  }

  public ActWebApiModelsOpportunitiesOpportunity customFields(Map<String, SystemObject> customFields) {
    this.customFields = customFields;
    return this;
  }

  public ActWebApiModelsOpportunitiesOpportunity putCustomFieldsItem(String key, SystemObject customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<String, SystemObject>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @ApiModelProperty(value = "")
  public Map<String, SystemObject> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(Map<String, SystemObject> customFields) {
    this.customFields = customFields;
  }

  public ActWebApiModelsOpportunitiesOpportunity created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public ActWebApiModelsOpportunitiesOpportunity edited(OffsetDateTime edited) {
    this.edited = edited;
    return this;
  }

   /**
   * Get edited
   * @return edited
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEdited() {
    return edited;
  }

  public void setEdited(OffsetDateTime edited) {
    this.edited = edited;
  }

  public ActWebApiModelsOpportunitiesOpportunity editedBy(String editedBy) {
    this.editedBy = editedBy;
    return this;
  }

   /**
   * Get editedBy
   * @return editedBy
  **/
  @ApiModelProperty(value = "")
  public String getEditedBy() {
    return editedBy;
  }

  public void setEditedBy(String editedBy) {
    this.editedBy = editedBy;
  }

  public ActWebApiModelsOpportunitiesOpportunity recordOwner(String recordOwner) {
    this.recordOwner = recordOwner;
    return this;
  }

   /**
   * Get recordOwner
   * @return recordOwner
  **/
  @ApiModelProperty(value = "")
  public String getRecordOwner() {
    return recordOwner;
  }

  public void setRecordOwner(String recordOwner) {
    this.recordOwner = recordOwner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActWebApiModelsOpportunitiesOpportunity actWebApiModelsOpportunitiesOpportunity = (ActWebApiModelsOpportunitiesOpportunity) o;
    return Objects.equals(this.id, actWebApiModelsOpportunitiesOpportunity.id) &&
        Objects.equals(this.name, actWebApiModelsOpportunitiesOpportunity.name) &&
        Objects.equals(this.actualCloseDate, actWebApiModelsOpportunitiesOpportunity.actualCloseDate) &&
        Objects.equals(this.companies, actWebApiModelsOpportunitiesOpportunity.companies) &&
        Objects.equals(this.competitor, actWebApiModelsOpportunitiesOpportunity.competitor) &&
        Objects.equals(this.contactNames, actWebApiModelsOpportunitiesOpportunity.contactNames) &&
        Objects.equals(this.contacts, actWebApiModelsOpportunitiesOpportunity.contacts) &&
        Objects.equals(this.creator, actWebApiModelsOpportunitiesOpportunity.creator) &&
        Objects.equals(this.daysOpen, actWebApiModelsOpportunitiesOpportunity.daysOpen) &&
        Objects.equals(this.estimatedCloseDate, actWebApiModelsOpportunitiesOpportunity.estimatedCloseDate) &&
        Objects.equals(this.grossMargin, actWebApiModelsOpportunitiesOpportunity.grossMargin) &&
        Objects.equals(this.groups, actWebApiModelsOpportunitiesOpportunity.groups) &&
        Objects.equals(this.isPrivate, actWebApiModelsOpportunitiesOpportunity.isPrivate) &&
        Objects.equals(this.manager, actWebApiModelsOpportunitiesOpportunity.manager) &&
        Objects.equals(this.openDate, actWebApiModelsOpportunitiesOpportunity.openDate) &&
        Objects.equals(this.probability, actWebApiModelsOpportunitiesOpportunity.probability) &&
        Objects.equals(this.productTotal, actWebApiModelsOpportunitiesOpportunity.productTotal) &&
        Objects.equals(this.reason, actWebApiModelsOpportunitiesOpportunity.reason) &&
        Objects.equals(this.source, actWebApiModelsOpportunitiesOpportunity.source) &&
        Objects.equals(this.stage, actWebApiModelsOpportunitiesOpportunity.stage) &&
        Objects.equals(this.status, actWebApiModelsOpportunitiesOpportunity.status) &&
        Objects.equals(this.totalPerCompany, actWebApiModelsOpportunitiesOpportunity.totalPerCompany) &&
        Objects.equals(this.totalPerContact, actWebApiModelsOpportunitiesOpportunity.totalPerContact) &&
        Objects.equals(this.totalPerGroup, actWebApiModelsOpportunitiesOpportunity.totalPerGroup) &&
        Objects.equals(this.weightedTotal, actWebApiModelsOpportunitiesOpportunity.weightedTotal) &&
        Objects.equals(this.relatedEntitiesResolver, actWebApiModelsOpportunitiesOpportunity.relatedEntitiesResolver) &&
        Objects.equals(this.customFields, actWebApiModelsOpportunitiesOpportunity.customFields) &&
        Objects.equals(this.created, actWebApiModelsOpportunitiesOpportunity.created) &&
        Objects.equals(this.edited, actWebApiModelsOpportunitiesOpportunity.edited) &&
        Objects.equals(this.editedBy, actWebApiModelsOpportunitiesOpportunity.editedBy) &&
        Objects.equals(this.recordOwner, actWebApiModelsOpportunitiesOpportunity.recordOwner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, actualCloseDate, companies, competitor, contactNames, contacts, creator, daysOpen, estimatedCloseDate, grossMargin, groups, isPrivate, manager, openDate, probability, productTotal, reason, source, stage, status, totalPerCompany, totalPerContact, totalPerGroup, weightedTotal, relatedEntitiesResolver, customFields, created, edited, editedBy, recordOwner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActWebApiModelsOpportunitiesOpportunity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    actualCloseDate: ").append(toIndentedString(actualCloseDate)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("    competitor: ").append(toIndentedString(competitor)).append("\n");
    sb.append("    contactNames: ").append(toIndentedString(contactNames)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    daysOpen: ").append(toIndentedString(daysOpen)).append("\n");
    sb.append("    estimatedCloseDate: ").append(toIndentedString(estimatedCloseDate)).append("\n");
    sb.append("    grossMargin: ").append(toIndentedString(grossMargin)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    openDate: ").append(toIndentedString(openDate)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    productTotal: ").append(toIndentedString(productTotal)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalPerCompany: ").append(toIndentedString(totalPerCompany)).append("\n");
    sb.append("    totalPerContact: ").append(toIndentedString(totalPerContact)).append("\n");
    sb.append("    totalPerGroup: ").append(toIndentedString(totalPerGroup)).append("\n");
    sb.append("    weightedTotal: ").append(toIndentedString(weightedTotal)).append("\n");
    sb.append("    relatedEntitiesResolver: ").append(toIndentedString(relatedEntitiesResolver)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    edited: ").append(toIndentedString(edited)).append("\n");
    sb.append("    editedBy: ").append(toIndentedString(editedBy)).append("\n");
    sb.append("    recordOwner: ").append(toIndentedString(recordOwner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

